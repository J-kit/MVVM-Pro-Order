<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Entenhausen" xml:space="preserve">
    <value>Donald Duck
Tick
Trick
Track
Daisy Duck
Dicky
Dacky 
Ducky
Dorette Duck
Dagobert Duck
Dietram Duck
Dussel Duck
Moby Duck
Primus von Quack
Bolivar
Dolly Duck
Danny Duck
Franz Gans
Gustav Gans
Güldo Gans
Golo Gans
Gisbert Gans
Gitta Gans
Gerry Gans
Kuno Knäul
Daniel Düsentrieb
Zacharias Zorngiebel
Quacky
Hubert Bogart
Nelly
Habakuk
Oona
Striezel Streunecke
Sergei Schlamassi
Baptist
Rita Rührig
Panzerknacker
Mac Moneysac
Klaas Klever
Gundel Gaukeley
Dr. Dark
Micky Maus
Minnie Maus
Mack
Muck
Pluto
Goofy
Alfons
Indiana Goof
Atömchen
Dicker
Gamma
Rudi Ross
Klarabella Kuh
Henriette Huhn
Maxi Smart
Hicksi
Käptn Kirchmaus
Spürli
Professor Marlin
Professor Wunderlich
Dr. Zenobius Zweistein
Professor Trockenstaub
Kommissar Hunter
Inspektor Issel
Kater Karlo
Trudi
Kralle
Schnauz
Das Schwarze Phantom
Hugo Habicht
Balduin Beutelschneider
Gefährlicher Gregor
Professor Ecks
Professor Doublex 
Professor Triplex
Rudi Rohrbruch
Drei kleine Schweinchen
Ede Wolf
Kleiner Wolf
Tinka Wolf
Hansi Hase
Molly Hase
Gevatter Fuchs
Gevatter Bär
Klein-Adlerauge
Groß-Adlerauge
Silberschlange
Ahörnchen und Behörnchen
Madam Mim
Pinocchio (Figur)
Jiminy Grille
Frieda
Quack
Johann
Nicky
Max
KJ
Phantomias
Eins
Zwei
Xadhoom
Evronianer
Klarissa
Urk</value>
  </data>
  <data name="Produkte" xml:space="preserve">
    <value>Bergbauern Bio-Vollmilch
Bergbauern Bio-Jogurt Banane Müsli
Bergbauern Bio-Jogurt Erdbeere
Bergbauern Bio-Jogurt Mango Maracuja
Bio-Bergbauern Jogurt Waldbeere
Bio-Schaf-Frischkäse
Bio-Artischocken
Bio-Paranüsse
Bio-Popcorn
Bio-Trink-Kakao
Bio-Schoko-Maulbeeren
Bio-Mandel-Riegel
Bio-Kokos-Chips
Bio-Müsli
Bio Pops
Flakes Mix
Bergbauern Bio-Senngold
Bergbauern Bio-Senngold
Bergbauern Bio-Senngold
Waldquelle
Club Mate
fuzetea
SPAR
Rauch Nativa
SPAR
S-BUDGET
SPAR
Coca Cola
Gasteiner
TANN
De Beukelaer
Mevgal
Campari
Splendid
NÖM fasten
SPAR
Cosy
OMO
Barilla
SPAR PREMIUM
Porta Leone
SPAR PREMIUM Premium
SIMPEX Color
SIMPEX Basic
SIMPEX Basic
SIMPEX Color
TANN
Barbecue
TANN
Wolf Eigold
Schogetten
Rapso
Jacobs
Blend-a-Med Complete
Felix
Funny Frisch
Axe
Kitekat
Kupferberg</value>
  </data>
</root>